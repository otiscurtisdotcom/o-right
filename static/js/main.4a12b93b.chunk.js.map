{"version":3,"sources":["Logo/Logo.tsx","hooks/useKeypress.tsx","shared/constants.tsx","Grid/Grid.tsx","Modal/Modal.tsx","shared/levels.tsx","Game/Game.tsx","Menu/Menu.tsx","PrivateRoute/PrivateRoute.tsx","App.tsx","index.tsx"],"names":["Logo","Direction","xmlns","viewBox","className","d","fill","USER_LEVEL","DEFAULT_GRID","start","row","col","end","Grid","props","gridData","squares","renderSquare","status","currentLevel","isCurrentSquare","isGoalSquare","isMineSquare","isKeySquare","classes","letter","toUpperCase","rowContainer","column","push","isShaking","Modal","isPlayingStatus","showMap","src","process","onClick","hideMap","winStatus","currentWord","restart","to","directions","direction","DOWN","keys","UP","LEFT","RIGHT","checkDirection","key","find","group","some","useKeyPress","action","useEffect","onKeyup","event","directionObj","window","addEventListener","removeEventListener","levelsMap","mines","blankGrid","level","grid","rowArray","square","mine","coords","getFrequency","tags","Number","tag","includes","replace","Game","levelPath","useLocation","pathname","iconPath","useState","setCurrentLevel","currentLevelNumber","setCurrentLevelNumber","setCurrentWord","isCurrentWordValid","setIsCurrentWordValid","setGrid","isCheckingStatus","setIsCheckingStatus","setIsPlayingStatus","setWinStatus","setShowMap","setIsShaking","makeMove","levelNum","split","a","currentSquare","getCurrentSquare","length","axios","result","word","data","frequency","fetchData","then","userLevel","nextLevel","newSquare","newGrid","shake","WIDTH","previousSquare","setTimeout","href","Menu","levelsElements","i","disabled","buttonContent","PrivateRoute","location","path","App","setUserLevel","levelNumber","localStorage","getItem","basename","component","newLevel","setItem","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a12b93b.chunk.js","sourcesContent":["import './Logo.scss';\n\nfunction Logo() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 255.26 108.96\">\n      <path className=\"cls-1\" d=\"M28.5 69.32A25.89 25.89 0 102.61 43.43 25.91 25.91 0 0028.5 69.32zm0-36.1a10.21 10.21 0 11-10.21 10.21A10.22 10.22 0 0128.5 33.22z\"/>\n      <path className=\"cls-1\" d=\"M144.58 17.43a25.89 25.89 0 100 51.78h7.47V53.53h-7.47a10.21 10.21 0 1110.21-10.21v22.26a6.63 6.63 0 01-6.62 6.62H4.84v15.69h143.33a22.34 22.34 0 0022.3-22.31V43.32a25.92 25.92 0 00-25.89-25.89z\"/>\n      <path className=\"cls-1\" d=\"M137.39 43.32a7.19 7.19 0 107.19-7.18 7.18 7.18 0 00-7.19 7.18z\"/>\n      <path className=\"cls-2\" d=\"M63.13 67.44A7.18 7.18 0 1056 60.26a7.18 7.18 0 007.13 7.18zm0-13.36A6.18 6.18 0 1157 60.26a6.18 6.18 0 016.13-6.18z\"/>\n      <path className=\"cls-1\" d=\"M191.15 43.32a7.18 7.18 0 107.18-7.18 7.17 7.17 0 00-7.18 7.18zM28.49 50.5a7.18 7.18 0 10-7.19-7.18 7.18 7.18 0 007.19 7.18zM109 34a7.18 7.18 0 10-7.19-7.18A7.18 7.18 0 00109 34zM88.24 45.43a10.22 10.22 0 0110.21-10.21V19.54a25.91 25.91 0 00-25.89 25.89v23.78h15.68zM242.45 61.46v-23h9.77V22.78h-9.77V2.61h-15.69v58.85a25.93 25.93 0 0025.9 25.9V71.67a10.22 10.22 0 01-10.21-10.21z\"/>\n      <path className=\"cls-1\" d=\"M188.25 43.14a10.21 10.21 0 0120.42 0v14.45l15.69 13.61V42.26a25.88 25.88 0 00-36.08-22.9V2.61h-15.71v66.6h15.68zM100.95 35.62h15.68v33.59h-15.68zM56.5 35.71h13.67V50.5H56.5z\"/>\n      <path className=\"cls-2\" fill=\"url(#linear-gradient)\" d=\"M172.48 73.07h26.21V53.51l30.57 26.42-30.57 26.42V86.79h-26.21V73.07zM59.98 59.79h6.35v1h-6.35z\"/>\n      <path className=\"cls-2\" fill=\"url(#linear-gradient)\" d=\"M62.98 64.67l-.71-.7 3.68-3.68-3.68-3.68.71-.71 4.38 4.39-4.38 4.38z\"/>\n    </svg>\n  );\n}\n\nexport default Logo;\n","import { useEffect } from 'react';\n\nexport enum Direction {\n  'DOWN',\n  'UP',\n  'LEFT',\n  'RIGHT'\n}\n\nexport interface keySet {\n  direction: Direction,\n  keys: string[]\n}\n\nconst directions: keySet[] = [\n  {\n    direction: Direction.DOWN,\n    keys: ['c','v','b','n','j','h','g']\n  },\n  {\n    direction: Direction.UP,\n    keys: ['e','r','t','y','u','d','f']\n  },\n  {\n    direction: Direction.LEFT,\n    keys: ['q','w','a','s','z','x']\n  },\n  {\n    direction: Direction.RIGHT,\n    keys: ['i','o','p','k','l','m']\n  }\n];\n\nconst useKeyPress = (action: any) => {\n  useEffect(() => {\n    const onKeyup = (event: KeyboardEvent) => {\n      const directionObj = checkDirection(event.key);\n      if (directionObj) {\n        action(event.key, directionObj.direction);\n      }\n    }\n    window.addEventListener('keyup', onKeyup);\n    return () => window.removeEventListener('keyup', onKeyup);\n  });\n}\n\nconst checkDirection = (key:string): keySet | undefined => {\n  return directions.find((group) => {\n    const containsKey = group.keys.some((letter) => letter === key);\n    return containsKey ? group : null;\n  });\n}\n\nexport default useKeyPress;","export interface Coords {\n  row: number;\n  col: number;\n}\n\nexport interface SquareState {\n  isCurrentSquare: boolean;\n  isGoalSquare: boolean;\n  isMineSquare: boolean;\n  isKeySquare: boolean;\n  letter: string;\n  coords: Coords;\n}\n\nexport interface Level {\n  start: Coords;\n  end: Coords;\n  mines?: Coords[];\n  keys?: Coords[];\n}\n\nexport interface DataMuseData {\n  word: string;\n  tags: string[];\n  defs?: string[];\n}\n\nexport const WIDTH = 5;\n\nexport const USER_LEVEL = 'userLevel';\n\nexport const DEFAULT_GRID: Level = {\n  start:{row:0,col:0},\n  end: {row:1,col:1}\n}\n","import { Level, SquareState, WIDTH } from '../shared/constants';\nimport './Grid.scss';\n\nconst Grid = (props: {\n  gridData: SquareState[][],\n  currentLevel?: Level,\n  isShaking: boolean,\n}) => {\n  const gridData = props.gridData;\n  const squares: JSX.Element[] = [];\n\n  const renderSquare = (row: number, col: number) => {\n    const status = gridData[row][col];\n    const classes = () => {\n      if (props.currentLevel) {\n       return (status.isCurrentSquare ? 'current ' : '') +\n              (status.isGoalSquare ? 'goal ' : '') +\n              (status.isMineSquare ? 'mine ' : '') +\n              (status.isKeySquare ? 'key ' : '')\n      }\n    }\n    return (\n      <div key={`square-${row}-${col}`} className={`${classes()}square`}>\n        {status.letter.toUpperCase()}\n      </div>\n    );\n  };\n\n  for(let row = 0; row < WIDTH; row++) {\n    const rowContainer: JSX.Element[] = [];\n    for(let column = 0; column < WIDTH; column++) {\n      rowContainer.push(\n        <span key={`wrapper-${row}-${column}`}>\n          {renderSquare(row, column)}\n        </span>\n      );\n    };\n    squares.push(\n      <div key={`row-${row}`} className=\"row\">{rowContainer}</div>\n    );\n  };\n\n  const classes = () => {\n    return `${props.currentLevel ? 'shown ' : ''}\n            ${props.isShaking ? 'shaking ' : ''}`;\n  }\n\n  return (\n    <div className={`${classes()} grid`}>\n      <div className=\"wrapper\">\n        {squares}\n      </div>\n    </div>\n  );\n}\n\nexport default Grid;\n","import { Link } from 'react-router-dom';\nimport './Modal.scss';\n\nconst Modal = (props: {\n  isPlayingStatus: boolean,\n  winStatus: boolean,\n  currentWord: string,\n  restart: any,\n  showMap: boolean,\n  hideMap: any\n}) => {\n  const iconPath = process.env.PUBLIC_URL + '/svg/keyboard.svg';\n\n  const modalContent = () => {\n    if (!props.isPlayingStatus) {\n      return (\n        <div className=\"box\">\n          <div className=\"text\">\n            <h2>{props.winStatus ? 'Well done' : 'Unlucky'}</h2>\n            <p>\n              {props.currentWord.toUpperCase()}\n              {props.winStatus ? ' is a valid word' : ' is not a valid word'}\n            </p>\n          </div>\n          <div className=\"buttons\">\n            <button onClick={props.restart}>\n              RESTART\n            </button>\n            <Link className=\"button\" to=\"/\">\n              MAP\n            </Link>\n          </div>\n        </div>\n      )\n    } else if (props.showMap) {\n      return (\n        <div className=\"box\">\n          <div className=\"text\">\n            <h2>MAP</h2>\n            <img src={`${iconPath}`} />\n          </div>\n          <div className=\"buttons\">\n            <button onClick={props.hideMap}>\n              OKAY\n            </button>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  return (\n    <div className={(props.isPlayingStatus && !props.showMap ? 'hidden ' : '') + 'modal'}>\n      {modalContent()}\n    </div>\n  );\n}\n\nexport default Modal;\n","import { Level } from \"./constants\";\n\nexport const levelsMap: Level[] = [\n  { // LEVEL 1\n    start: {\n      row: 3,\n      col: 0\n    },\n    end: {\n      row: 3,\n      col: 4\n    },\n  },\n  { // LEVEL 2\n    start: {\n      row: 2,\n      col: 3\n    },\n    end: {\n      row: 2,\n      col: 0\n    },\n  },\n  { // LEVEL 3\n    start: {\n      row: 4,\n      col: 0\n    },\n    end: {\n      row: 0,\n      col: 0\n    },\n  },\n  { // LEVEL 4\n    start: {\n      row: 2,\n      col: 3\n    },\n    end: {\n      row: 2,\n      col: 2\n    },\n  },\n  { // LEVEL 5\n    start: {\n      row: 0,\n      col: 3\n    },\n    end: {\n      row: 3,\n      col: 2\n    },\n  },\n  { // LEVEL 6\n    start: {\n      row: 3,\n      col: 4\n    },\n    end: {\n      row: 3,\n      col: 0\n    },\n  },\n  { // LEVEL 7\n    start: {\n      row: 4,\n      col: 4\n    },\n    end: {\n      row: 2,\n      col: 0\n    },\n  },\n  { // LEVEL 8\n    start: {\n      row: 0,\n      col: 1\n    },\n    end: {\n      row: 3,\n      col: 3\n    },\n  },\n  { // LEVEL 9\n    start: {\n      row: 0,\n      col: 4\n    },\n    end: {\n      row: 3,\n      col: 0\n    },\n  },\n  { // LEVEL 10\n    start: {\n      row: 4,\n      col: 4\n    },\n    end: {\n      row: 0,\n      col: 0\n    },\n  },\n  { // LEVEL 11\n    start: {\n      row: 1,\n      col: 2\n    },\n    end: {\n      row: 1,\n      col: 3\n    },\n    mines: [\n      {\n        row: 2,\n        col: 2\n      }\n    ]\n  },\n  { // LEVEL 12\n    start: {\n      row: 4,\n      col: 3\n    },\n    end: {\n      row: 2,\n      col: 3\n    },\n    mines: [\n      {\n        row: 3,\n        col: 3\n      }\n    ]\n  },\n  { // LEVEL 13\n    start: {\n      row: 1,\n      col: 1\n    },\n    end: {\n      row: 1,\n      col: 3\n    },\n    mines: [\n      {\n        row: 1,\n        col: 2\n      }\n    ]\n  },\n  { // LEVEL 14\n    start: {\n      row: 2,\n      col: 0\n    },\n    end: {\n      row: 0,\n      col: 2\n    },\n    mines: [\n      {\n        row: 2,\n        col: 1\n      },\n      {\n        row: 0,\n        col: 1\n      }\n    ]\n  },\n  { // LEVEL 15\n    start: {\n      row: 3,\n      col: 0\n    },\n    end: {\n      row: 0,\n      col: 3\n    },\n    mines: [\n      {\n        row: 2,\n        col: 0\n      },\n      {\n        row: 1,\n        col: 2\n      },\n    ]\n  },\n  { // LEVEL 16\n    start: {\n      row: 1,\n      col: 0\n    },\n    end: {\n      row: 0,\n      col: 4\n    },\n    mines: [\n      {\n        row: 0,\n        col: 1\n      },\n      {\n        row: 1,\n        col: 1\n      },\n    ]\n  },\n  { // LEVEL 17\n    start: {\n      row: 4,\n      col: 3\n    },\n    end: {\n      row: 0,\n      col: 0\n    },\n    mines: [\n      {\n        row: 4,\n        col: 0\n      },\n      {\n        row: 3,\n        col: 3\n      },\n    ]\n  },\n  { // LEVEL 18\n    start: {\n      row: 4,\n      col: 2\n    },\n    end: {\n      row: 0,\n      col: 1\n    },\n    mines: [\n      {\n        row: 3,\n        col: 2\n      },\n      {\n        row: 4,\n        col: 1\n      },\n    ]\n  },\n  { // LEVEL 19\n    start: {\n      row: 0,\n      col: 2\n    },\n    end: {\n      row: 4,\n      col: 2\n    },\n    mines: [\n      {\n        row: 2,\n        col: 2\n      },\n    ]\n  },\n  { // LEVEL 20\n    start: {\n      row: 0,\n      col: 3\n    },\n    end: {\n      row: 4,\n      col: 1\n    },\n    mines: [\n      {\n        row: 1,\n        col: 1\n      },\n      {\n        row: 1,\n        col: 3\n      },\n    ]\n  },\n  { // LEVEL 21\n    start: {\n      row: 1,\n      col: 2\n    },\n    end: {\n      row: 2,\n      col: 2\n    },\n    keys: [\n      {\n        row: 3,\n        col: 1\n      },\n    ]\n  },\n  { // LEVEL 22\n    start: {\n      row: 1,\n      col: 1\n    },\n    end: {\n      row: 0,\n      col: 3\n    },\n    keys: [\n      {\n        row: 0,\n        col: 0\n      },\n    ]\n  },\n  { // LEVEL 23\n    start: {\n      row: 3,\n      col: 4\n    },\n    end: {\n      row: 1,\n      col: 3\n    },\n    keys: [\n      {\n        row: 4,\n        col: 3\n      },\n    ]\n  },\n  { // LEVEL 24\n    start: {\n      row: 1,\n      col: 1\n    },\n    end: {\n      row: 3,\n      col: 3\n    },\n    keys: [\n      {\n        row: 4,\n        col: 2\n      },\n    ]\n  },\n  { // LEVEL 25\n    start: {\n      row: 4,\n      col: 1\n    },\n    end: {\n      row: 1,\n      col: 1\n    },\n    keys: [\n      {\n        row: 3,\n        col: 3\n      },\n    ]\n  },\n  { // LEVEL 26\n    start: {\n      row: 1,\n      col: 2\n    },\n    end: {\n      row: 4,\n      col: 2\n    },\n    keys: [\n      {\n        row: 3,\n        col: 1\n      },\n      {\n        row: 3,\n        col: 3\n      },\n    ]\n  },\n  { // LEVEL 27\n    start: {\n      row: 3,\n      col: 4\n    },\n    end: {\n      row: 1,\n      col: 3\n    },\n    keys: [\n      {\n        row: 0,\n        col: 1\n      },\n      {\n        row: 3,\n        col: 1\n      },\n    ]\n  },\n  { // LEVEL 28\n    start: {\n      row: 3,\n      col: 4\n    },\n    end: {\n      row: 1,\n      col: 0\n    },\n    keys: [\n      {\n        row: 4,\n        col: 3\n      },\n    ]\n  },\n  { // LEVEL 29\n    start: {\n      row: 2,\n      col: 1\n    },\n    end: {\n      row: 1,\n      col: 2\n    },\n    keys: [\n      {\n        row: 3,\n        col: 0\n      },\n      {\n        row: 1,\n        col: 3\n      },\n    ]\n  },\n  { // LEVEL 30\n    start: {\n      row: 2,\n      col: 2\n    },\n    end: {\n      row: 3,\n      col: 3\n    },\n    keys: [\n      {\n        row: 0,\n        col: 0\n      },\n    ]\n  }\n]\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport Grid from '../Grid/Grid';\nimport Modal from '../Modal/Modal';\nimport useKeyPress, { Direction } from '../hooks/useKeypress';\nimport { DataMuseData, DEFAULT_GRID, Level, SquareState, WIDTH } from '../shared/constants';\nimport './Game.scss';\nimport { levelsMap } from '../shared/levels';\n\nconst blankGrid = (level: Level): SquareState[][] => {\n  const grid: SquareState[][] = [];\n  for (let row = 0; row < WIDTH; row++) {\n    const rowArray: SquareState[] = [];\n    for (let col = 0; col < WIDTH; col++) {\n      const square: SquareState = {\n        isCurrentSquare: (level.start.row === row && level.start.col === col),\n        isGoalSquare: (level.end.row === row && level.end.col === col),\n        isMineSquare: (\n          level.mines?.some(mine => mine.row === row && mine.col === col) \n          || false\n        ),\n        isKeySquare: (\n          level.keys?.some(key => key.row === row && key.col === col) \n          || false\n        ),\n        letter: '',\n        coords: {row, col}\n      };\n      rowArray.push(square);\n    }\n    grid.push(rowArray);\n  }\n  return grid;\n}\n\nconst getFrequency = (tags?: string[]): number => {\n  if (tags) {\n    return Number(tags.find(tag => tag.includes('f:'))\n          ?.replace('f:',''));\n  } else {\n    return 0;\n  }\n}\n\nconst Game = (props: {\n  userLevel: number,\n  nextLevel: any\n}) => {\n  const levelPath = useLocation().pathname;\n  const iconPath = process.env.PUBLIC_URL + '/svg/icons.svg';\n\n  const [currentLevel, setCurrentLevel] = useState<Level>();\n  const [currentLevelNumber, setCurrentLevelNumber] = useState<Number>();\n  const [currentWord, setCurrentWord] = useState('');\n  const [isCurrentWordValid, setIsCurrentWordValid] = useState(false);\n  const [grid, setGrid] = useState<SquareState[][]>(blankGrid(DEFAULT_GRID));\n  const [isCheckingStatus, setIsCheckingStatus] = useState(false);\n  const [isPlayingStatus, setIsPlayingStatus] = useState(true);\n  const [winStatus, setWinStatus] = useState(false);\n  const [showMap, setShowMap] = useState(false);\n  const [isShaking, setIsShaking] = useState(false);\n\n  useKeyPress((key: string, direction: Direction)=> {\n    makeMove(key, direction);\n  });\n\n  useEffect(() => {\n    const levelNum = Number(levelPath.split('/')[2]);\n    setCurrentLevel(levelsMap[levelNum - 1]);\n    setCurrentLevelNumber(levelNum);\n  }, []);\n\n  useEffect(() => {\n    if (currentLevel) {\n      setGrid(blankGrid(currentLevel));\n    }\n  }, [currentLevel]);\n\n  useEffect(() => {\n    setIsCheckingStatus(true);\n    const fetchData = async () => {\n      const currentSquare = getCurrentSquare();\n      if (currentWord.length > 2 && currentSquare && currentSquare.isGoalSquare) {\n        const result = await axios(\n          `https://api.datamuse.com/words?sp=${currentWord}&md=fr,d,p&max=1`,\n        );\n\n        const word: DataMuseData = result.data[0];\n\n        if (!word || !word.tags) {\n          setIsCurrentWordValid(false);\n          return;\n        }\n\n        const frequency = getFrequency(word.tags);\n        \n        setIsCurrentWordValid(\n          // word.defs && word.defs.length > 0\n          word.word === currentWord\n          && word.tags && !word.tags.includes(\"prop\")\n          && frequency > 0.01\n          || false\n        );\n      } else {\n        setIsCurrentWordValid(false);\n      }\n    };\n    fetchData().then(() => {\n      setIsCheckingStatus(false);\n    });\n  }, [currentWord]);\n\n  useEffect(() => {\n    const currentSquare = getCurrentSquare();\n    if (isCheckingStatus === false && currentSquare && currentSquare.isGoalSquare) {\n      setWinStatus(isCurrentWordValid);\n      setIsPlayingStatus(false);\n    }\n  }, [isCheckingStatus]);\n\n  useEffect(() => {\n    // Unlock next level if userLevel is completed\n    if (winStatus && props.userLevel === currentLevelNumber) {\n      props.nextLevel();\n    }\n  }, [winStatus])\n\n  const makeMove = (key: string, direction: Direction) => {\n    if (!grid) return;\n    \n    const newGrid = grid;\n    const currentSquare = getCurrentSquare();\n    \n    let newSquare: SquareState; \n    switch (direction) {\n      case Direction.UP:\n        if (currentSquare?.coords.row === 0) {\n          shake();\n          return;\n        }\n        newSquare = grid[currentSquare!.coords.row - 1][currentSquare!.coords.col];\n        break;\n      case Direction.DOWN:\n        if (currentSquare?.coords.row === WIDTH - 1) {\n          shake();\n          return;\n        }\n        newSquare = grid[currentSquare!.coords.row + 1][currentSquare!.coords.col];\n        break;\n      case Direction.LEFT:\n        if (currentSquare?.coords.col === 0) {\n          shake();\n          return;\n        }\n        newSquare = grid[currentSquare!.coords.row][currentSquare!.coords.col - 1];\n        break;\n      case Direction.RIGHT:\n        if (currentSquare?.coords.col === WIDTH - 1) {\n          shake();\n          return;\n        }\n        newSquare = grid[currentSquare!.coords.row][currentSquare!.coords.col + 1];\n        break;\n    }\n\n    if (newSquare.letter || newSquare.isMineSquare) {\n      shake();\n      return;\n    }\n\n    // Set newSquare in newGrid & wipe old one\n    newSquare.isCurrentSquare = true;\n    newGrid[newSquare.coords.row][newSquare.coords.col] = newSquare;\n\n    const previousSquare = newGrid[currentSquare!.coords.row][currentSquare!.coords.col];\n    previousSquare.isCurrentSquare = false;\n    previousSquare.letter = key;\n\n    setCurrentWord(currentWord + key)\n    setGrid(newGrid);\n  }\n\n  const restart = () => {\n    setCurrentWord('');\n    setGrid(blankGrid(currentLevel!));\n    setIsPlayingStatus(true);\n    setWinStatus(false);\n  }\n\n  const getCurrentSquare = (): SquareState | null => {\n    if (grid) {\n      const currentRow = grid.find(row => row.some(square => square.isCurrentSquare === true))!;\n      return currentRow.find(square => square.isCurrentSquare)!;\n    } else return null;\n  };\n\n  const shake = () => {\n    setIsShaking(true);\n    setTimeout(() => {\n      setIsShaking(false);\n    }, 600)\n  }\n\n  return (\n    <>\n      <section>\n        <Grid gridData={grid} currentLevel={currentLevel} isShaking={isShaking} />\n        <div className=\"text-box\">\n          <h3>{currentWord.toUpperCase()}</h3>\n        </div>\n      </section>\n\n      <Modal \n        isPlayingStatus={isPlayingStatus}\n        winStatus={winStatus}\n        currentWord={currentWord}\n        restart={restart}\n        showMap={showMap}\n        hideMap={() => setShowMap(false)}\n      />\n\n      <div className=\"side-bar\">\n        <button className=\"square-btn\" onClick={restart}>\n          <svg>\n            <use href={`${iconPath}#reset`} />\n          </svg>\n        </button>\n        <Link className=\"button square-btn\" to=\"/\">\n          <svg className=\"arrow-left\">\n            <use href={`${iconPath}#arrow`} />\n          </svg>\n        </Link>\n        <button className=\"square-btn\" onClick={() => setShowMap(true)}>\n          <svg>\n            <use href={`${iconPath}#map`} />\n          </svg>\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default Game;\n","import { Link } from 'react-router-dom';\nimport { levelsMap } from '../shared/levels';\nimport './Menu.scss';\n\nconst Menu = (props: {userLevel: number}) => {\n  const levelsElements: JSX.Element[] = [];\n  for (let i = 1; i < levelsMap.length + 1; i++) {\n    const disabled = i > props.userLevel;\n    const buttonContent = disabled ? '' : `${i}`;\n\n    levelsElements.push(\n      <Link key={`menu-${i}`} className={(disabled ? 'disabled ' : '') + 'square button'} to={`level/${i}`}>\n        {buttonContent}\n      </Link>\n    )\n  };\n\n  return (\n    <div className=\"menu-grid\">\n      {levelsElements}\n    </div>\n  );\n}\n\nexport default Menu;","import { Route, Redirect } from 'react-router-dom';\nimport Game from '../Game/Game';\n\nconst PrivateRoute = (props: \n  // any\n\n  {\n  component: any,\n  userLevel: number,\n  nextLevel: any,\n  path: string,\n  location?: {\n    pathname: string\n  }\n  }\n) => {\n  const urlLevelNumber = Number(props.location && props.location.pathname.split('/')[2]);\n  return urlLevelNumber <= props.userLevel ?\n    (\n      <Route path={props.path}>\n        <Game userLevel={props.userLevel} nextLevel={props.nextLevel} />\n      </Route>\n    )\n    : (<Redirect to=\"/\" />);\n};\n\nexport default PrivateRoute;","import {\n  Switch,\n  Route,\n  HashRouter,\n  Redirect\n} from 'react-router-dom';\nimport './App.scss';\nimport Logo from './Logo/Logo';\nimport Game from './Game/Game';\nimport Menu from './Menu/Menu';\nimport { useEffect, useState } from 'react';\nimport { USER_LEVEL } from './shared/constants';\nimport PrivateRoute from './PrivateRoute/PrivateRoute';\n\nconst App = () => {\n  const [userLevel, setUserLevel] = useState(1);\n\n  useEffect(() => {\n    const levelNumber = localStorage.getItem(USER_LEVEL);\n    setUserLevel(Number(levelNumber || 1));\n  }, []);\n\n  const nextLevel = () => {\n    const newLevel = userLevel + 1;\n    setUserLevel(newLevel);\n    localStorage.setItem(USER_LEVEL, `${newLevel}`);\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <Logo />\n      </header>\n      <main>\n        <HashRouter basename='/'>\n          <Switch>\n            <PrivateRoute\n              path=\"/level/:id\"\n              component={Game}\n              userLevel={userLevel}\n              nextLevel={nextLevel}\n            />\n            <Route exact path=\"/\">\n              <Menu userLevel={userLevel} />\n            </Route>\n          </Switch>\n        </HashRouter>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}