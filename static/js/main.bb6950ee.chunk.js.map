{"version":3,"sources":["Logo/Logo.tsx","hooks/useKeypress.tsx","Grid/Grid.tsx","shared/constants.tsx","Modal/Modal.tsx","shared/levels.tsx","Game/Game.tsx","Menu/Menu.tsx","App.tsx","index.tsx"],"names":["Logo","Direction","xmlns","viewBox","className","d","fill","Grid","props","gridData","squares","renderSquare","row","col","status","isCurrentSquare","currentLevel","goalSquare","letter","toUpperCase","rowContainer","column","push","Modal","isPlayingStatus","winStatus","currentWord","onClick","restart","directions","direction","DOWN","keys","UP","LEFT","RIGHT","useKeyPress","action","useEffect","onKeyup","event","key","directionObj","find","group","some","window","addEventListener","removeEventListener","levelsMap","start","end","blankGrid","goal","grid","rowArray","square","coords","Game","useState","setCurrentLevel","setCurrentWord","isCurrentWordValid","setIsCurrentWordValid","setGrid","isCheckingStatus","setIsCheckingStatus","setIsPlayingStatus","setWinStatus","makeMove","levelPath","location","pathname","levelNum","Number","split","a","length","axios","result","data","fetchData","then","currentSquare","getCurrentSquare","newSquare","newGrid","WIDTH","previousSquare","to","Menu","levelsElements","i","App","console","log","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb6950ee.chunk.js","sourcesContent":["import './Logo.scss';\n\nfunction Logo() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 255.26 108.96\">\n      <path className=\"cls-1\" d=\"M28.5 69.32A25.89 25.89 0 102.61 43.43 25.91 25.91 0 0028.5 69.32zm0-36.1a10.21 10.21 0 11-10.21 10.21A10.22 10.22 0 0128.5 33.22z\"/>\n      <path className=\"cls-1\" d=\"M144.58 17.43a25.89 25.89 0 100 51.78h7.47V53.53h-7.47a10.21 10.21 0 1110.21-10.21v22.26a6.63 6.63 0 01-6.62 6.62H4.84v15.69h143.33a22.34 22.34 0 0022.3-22.31V43.32a25.92 25.92 0 00-25.89-25.89z\"/>\n      <path className=\"cls-1\" d=\"M137.39 43.32a7.19 7.19 0 107.19-7.18 7.18 7.18 0 00-7.19 7.18z\"/>\n      <path className=\"cls-2\" d=\"M63.13 67.44A7.18 7.18 0 1056 60.26a7.18 7.18 0 007.13 7.18zm0-13.36A6.18 6.18 0 1157 60.26a6.18 6.18 0 016.13-6.18z\"/>\n      <path className=\"cls-1\" d=\"M191.15 43.32a7.18 7.18 0 107.18-7.18 7.17 7.17 0 00-7.18 7.18zM28.49 50.5a7.18 7.18 0 10-7.19-7.18 7.18 7.18 0 007.19 7.18zM109 34a7.18 7.18 0 10-7.19-7.18A7.18 7.18 0 00109 34zM88.24 45.43a10.22 10.22 0 0110.21-10.21V19.54a25.91 25.91 0 00-25.89 25.89v23.78h15.68zM242.45 61.46v-23h9.77V22.78h-9.77V2.61h-15.69v58.85a25.93 25.93 0 0025.9 25.9V71.67a10.22 10.22 0 01-10.21-10.21z\"/>\n      <path className=\"cls-1\" d=\"M188.25 43.14a10.21 10.21 0 0120.42 0v14.45l15.69 13.61V42.26a25.88 25.88 0 00-36.08-22.9V2.61h-15.71v66.6h15.68zM100.95 35.62h15.68v33.59h-15.68zM56.5 35.71h13.67V50.5H56.5z\"/>\n      <path className=\"cls-2\" fill=\"url(#linear-gradient)\" d=\"M172.48 73.07h26.21V53.51l30.57 26.42-30.57 26.42V86.79h-26.21V73.07zM59.98 59.79h6.35v1h-6.35z\"/>\n      <path className=\"cls-2\" fill=\"url(#linear-gradient)\" d=\"M62.98 64.67l-.71-.7 3.68-3.68-3.68-3.68.71-.71 4.38 4.39-4.38 4.38z\"/>\n    </svg>\n  );\n}\n\nexport default Logo;\n","import { useEffect } from 'react';\n\nexport enum Direction {\n  'DOWN',\n  'UP',\n  'LEFT',\n  'RIGHT'\n}\n\nexport interface keySet {\n  direction: Direction,\n  keys: string[]\n}\n\nconst directions: keySet[] = [\n  {\n    direction: Direction.DOWN,\n    keys: ['c','v','b','n','j','h','g']\n  },\n  {\n    direction: Direction.UP,\n    keys: ['e','r','t','y','u','d','f']\n  },\n  {\n    direction: Direction.LEFT,\n    keys: ['q','w','a','s','z','x']\n  },\n  {\n    direction: Direction.RIGHT,\n    keys: ['i','o','p','k','l','m']\n  }\n];\n\nexport default function useKeyPress(action: any) {\n  useEffect(() => {\n    function onKeyup(event: KeyboardEvent) {\n      const directionObj = checkDirection(event.key);\n      if (directionObj) {\n        action(event.key, directionObj.direction);\n      }\n    }\n    window.addEventListener('keyup', onKeyup);\n    return () => window.removeEventListener('keyup', onKeyup);\n  });\n}\n\nfunction checkDirection(key:string): keySet | undefined {\n  return directions.find((group) => {\n    const containsKey = group.keys.some((letter) => letter === key);\n    return containsKey ? group : null;\n  });\n}","import { Level, SquareState, WIDTH } from '../shared/constants';\nimport './Grid.scss';\n\nconst Grid = (props: {gridData: SquareState[][], currentLevel?: Level}) => {\n  const gridData = props.gridData;\n  const squares: JSX.Element[] = [];\n\n  const renderSquare = (row: number, col: number) => {\n    const status = gridData[row][col];\n    return (\n      <div className={\n        (status.isCurrentSquare && props.currentLevel ? 'current ' : '') +\n        (status.goalSquare && props.currentLevel ? 'goal ' : '') +\n        'square'\n      }>\n        {status.letter.toUpperCase()}\n      </div>\n    );\n  };\n\n  for(let row = 0; row < WIDTH; row++) {\n    const rowContainer: JSX.Element[] = [];\n    for(let column = 0; column < WIDTH; column++) {\n      rowContainer.push(\n        <>{renderSquare(row, column)}</>\n      );\n    }\n    squares.push(\n      <div className=\"row\">{rowContainer}</div>\n    );\n  };\n\n  return (\n    <div className={(props.currentLevel ? 'shown ' : '') + 'grid'}>\n      <div className=\"wrapper\">\n        {squares}\n      </div>\n    </div>\n  );\n}\n\nexport default Grid;\n","export interface Coords {\n  row: number;\n  col: number;\n}\n\nexport interface SquareState {\n  isCurrentSquare: boolean;\n  goalSquare: boolean;\n  letter: string;\n  coords: Coords;\n}\n\nexport interface Level {\n  start: Coords;\n  end: Coords;\n}\n\nexport const WIDTH = 5;\n","import './Modal.scss';\n\nconst Modal = (props: {\n  isPlayingStatus: boolean,\n  winStatus: boolean,\n  currentWord: string,\n  restart: any\n}) => {\n  return (\n    <div className={(props.isPlayingStatus ? 'hidden ' : '') + 'modal'}>\n      <div className=\"box\">\n        <div className=\"text\">\n          <h2>{props.winStatus ? 'Well done' : 'Unlucky'}</h2>\n          <p>\n            {props.currentWord.toUpperCase()}\n            {props.winStatus ? ' is a valid word' : ' is not a valid word'}\n          </p>\n        </div>\n        <button onClick={props.restart}>RESTART</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal;\n","import { Level } from \"./constants\";\n\nexport const levelsMap: Level[] = [\n  { // LEVEL 1\n    start: {\n      row: 2,\n      col: 3\n    },\n    end: {\n      row: 2,\n      col: 0\n    },\n  },\n  { // LEVEL 2\n    start: {\n      row: 0,\n      col: 1\n    },\n    end: {\n      row: 2,\n      col: 3\n    },\n  },\n  { // LEVEL 3\n    start: {\n      row: 2,\n      col: 3\n    },\n    end: {\n      row: 2,\n      col: 2\n    },\n  },\n  { // LEVEL 4\n    start: {\n      row: 2,\n      col: 2\n    },\n    end: {\n      row: 3,\n      col: 0\n    },\n  },\n  { // LEVEL 5\n    start: {\n      row: 2,\n      col: 2\n    },\n    end: {\n      row: 4,\n      col: 4\n    },\n  },\n  { // LEVEL 6\n    start: {\n      row: 4,\n      col: 4\n    },\n    end: {\n      row: 4,\n      col: 0\n    },\n  },\n  { // LEVEL 7\n    start: {\n      row: 1,\n      col: 1\n    },\n    end: {\n      row: 3,\n      col: 0\n    },\n  },\n  { // LEVEL 8\n    start: {\n      row: 0,\n      col: 2\n    },\n    end: {\n      row: 3,\n      col: 4\n    },\n  },\n  { // LEVEL 9\n    start: {\n      row: 0,\n      col: 4\n    },\n    end: {\n      row: 4,\n      col: 0\n    },\n  },\n  { // LEVEL 10\n    start: {\n      row: 4,\n      col: 4\n    },\n    end: {\n      row: 0,\n      col: 0\n    },\n  }\n]\n","import { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Grid from '../Grid/Grid';\nimport Modal from '../Modal/Modal';\nimport useKeyPress, { Direction } from '../hooks/useKeypress';\nimport { Coords, Level, SquareState, WIDTH } from '../shared/constants';\nimport './Game.scss';\nimport { levelsMap } from '../shared/levels';\n\nconst blankGrid = (start: Coords, goal: Coords): SquareState[][] => {\n  const grid: SquareState[][] = [];\n  for (let row = 0; row < WIDTH; row++) {\n    const rowArray: SquareState[] = [];\n    for (let col = 0; col < WIDTH; col++) {\n      const square: SquareState = {\n        isCurrentSquare: (start.row === row && start.col === col),\n        goalSquare: (goal.row === row && goal.col === col),\n        letter: '',\n        coords: {row, col}\n      };\n      rowArray.push(square);\n    }\n    grid.push(rowArray);\n  }\n  return grid;\n}\n\nconst Game = (props: {location: {pathname: string}}) => {\n  const [currentLevel, setCurrentLevel] = useState<Level>();\n  const [currentWord, setCurrentWord] = useState('');\n  const [isCurrentWordValid, setIsCurrentWordValid] = useState(false);\n  const [grid, setGrid] = useState<SquareState[][]>(blankGrid({row:0,col:0},{row:1,col:1}));\n  const [isCheckingStatus, setIsCheckingStatus] = useState(false);\n  const [isPlayingStatus, setIsPlayingStatus] = useState(true);\n  const [winStatus, setWinStatus] = useState(false);\n\n  useKeyPress((key: string, direction: Direction)=> {\n    makeMove(key, direction);\n  });\n\n  useEffect(() => {\n    const levelPath = props.location.pathname;\n    const levelNum = Number(levelPath.split('/')[2]) - 1;\n    setCurrentLevel(levelsMap[levelNum]);\n  }, []);\n\n  useEffect(() => {\n    if (currentLevel) {\n      setGrid(blankGrid(currentLevel.start, currentLevel.end));\n    }\n  }, [currentLevel]);\n\n  useEffect(() => {\n    setIsCheckingStatus(true);\n    const fetchData = async () => {\n      if (currentWord.length > 2) {\n        const result = await axios(\n          `https://api.datamuse.com/words?sp=${currentWord}&md=d&max=1`,\n        );\n  \n        setIsCurrentWordValid(\n          result.data[0] && result.data[0]['defs'] &&\n          result.data[0]['defs'].length > 0 || false\n        );\n      } else {\n        setIsCurrentWordValid(false);\n      }\n    };\n    fetchData().then(() => {\n      setIsCheckingStatus(false);\n    });\n  }, [currentWord]);\n\n  useEffect(() => {\n    const currentSquare = getCurrentSquare();\n    if (isCheckingStatus === false && currentSquare && currentSquare.goalSquare) {\n      setWinStatus(isCurrentWordValid);\n      setIsPlayingStatus(false);\n    }\n  }, [isCheckingStatus]);\n\n  const makeMove = (key: string, direction: Direction) => {\n    if (!grid) return;\n    \n    const newGrid = grid;\n    const currentSquare = getCurrentSquare();\n    \n    let newSquare: SquareState; \n    switch (direction) {\n      case Direction.UP:\n        if (currentSquare?.coords.row === 0) return;\n        newSquare = grid[currentSquare!.coords.row - 1][currentSquare!.coords.col];\n        break;\n      case Direction.DOWN:\n        if (currentSquare?.coords.row === WIDTH - 1) return;\n        newSquare = grid[currentSquare!.coords.row + 1][currentSquare!.coords.col];\n        break;\n      case Direction.LEFT:\n        if (currentSquare?.coords.col === 0) return;\n        newSquare = grid[currentSquare!.coords.row][currentSquare!.coords.col - 1];\n        break;\n      case Direction.RIGHT:\n        if (currentSquare?.coords.col === WIDTH - 1) return;\n        newSquare = grid[currentSquare!.coords.row][currentSquare!.coords.col + 1];\n        break;\n    }\n\n    if (newSquare.letter) return;\n\n    // Set newSquare in newGrid & wipe old one\n    newSquare.isCurrentSquare = true;\n    newGrid[newSquare.coords.row][newSquare.coords.col] = newSquare;\n\n    const previousSquare = newGrid[currentSquare!.coords.row][currentSquare!.coords.col];\n    previousSquare.isCurrentSquare = false;\n    previousSquare.letter = key;\n\n    setCurrentWord(currentWord + key)\n    setGrid(newGrid);\n  }\n\n  const restart = () => {\n    setCurrentWord('');\n    setGrid(blankGrid(currentLevel!.start, currentLevel!.end));\n    setIsPlayingStatus(true);\n    setWinStatus(false);\n  }\n\n  const getCurrentSquare = (): SquareState | null => {\n    if (grid) {\n      const currentRow = grid.find(row => row.some(square => square.isCurrentSquare === true))!;\n      return currentRow.find(square => square.isCurrentSquare)!;\n    } else return null;\n  };\n\n  return (\n    <>\n      <section>\n        <Grid gridData={grid} currentLevel={currentLevel} />\n        <div className=\"text-box\">\n          <h3>{currentWord.toUpperCase()}</h3>\n        </div>\n      </section>\n\n      <Modal \n        isPlayingStatus={isPlayingStatus}\n        winStatus={winStatus}\n        currentWord={currentWord}\n        restart={restart}\n      />\n\n      <div className=\"side-bar\">\n        <button className=\"square-btn\" onClick={restart}>\n          R\n        </button>\n        <Link className=\"button square-btn\" to=\"/\">\n          M\n        </Link>\n      </div>\n    </>\n  );\n}\n\nexport default Game;\n","import { Link } from 'react-router-dom';\nimport { levelsMap } from '../shared/levels';\nimport './Menu.scss';\n\nconst Menu = () => {\n  const levelsElements: JSX.Element[] = [];\n  for (let i = 1; i < levelsMap.length + 1; i++) {\n    levelsElements.push(\n      <Link className=\"square button\" to={`level/${i}`}>\n        {i}\n      </Link>\n    )\n  };\n\n  return (\n    <div className=\"menu-grid\">\n      {levelsElements}\n    </div>\n  );\n}\n\nexport default Menu;","import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport './App.scss';\nimport Logo from './Logo/Logo';\nimport Game from './Game/Game';\nimport Menu from './Menu/Menu';\n\nconst App = () => {\n  console.log('test');\n\n  return (\n    <div className=\"App\">\n      <header>\n        <Logo />\n      </header>\n      <main>\n        <Router>\n          <Switch>\n            <Route path=\"level/:id\" component={Game} />\n            <Route path=\"\" component={Menu} />\n          </Switch>\n        </Router>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}