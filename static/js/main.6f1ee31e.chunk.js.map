{"version":3,"sources":["Logo/Logo.tsx","hooks/useKeypress.tsx","Grid/Grid.tsx","shared/constants.tsx","Modal/Modal.tsx","Page/Page.tsx","App.tsx","index.tsx"],"names":["Logo","Direction","xmlns","viewBox","className","d","fill","Grid","props","gridData","squares","row","rowContainer","column","push","renderSquare","col","status","isCurrentSquare","goalSquare","letter","toUpperCase","directions","direction","DOWN","keys","UP","LEFT","RIGHT","useKeyPress","action","useEffect","onKeyup","event","key","directionObj","find","group","some","window","addEventListener","removeEventListener","Modal","isPlayingStatus","winStatus","currentWord","onClick","restart","blankGrid","start","goal","grid","rowArray","square","coords","Page","useState","setCurrentWord","isCurrentWordValid","setIsCurrentWordValid","setGrid","isCheckingStatus","setIsCheckingStatus","setIsPlayingStatus","setWinStatus","makeMove","a","length","axios","result","data","fetchData","then","getCurrentSquare","console","log","newSquare","newGrid","currentSquare","WIDTH","previousSquare","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f1ee31e.chunk.js","sourcesContent":["import './Logo.scss';\n\nfunction Logo() {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 255.26 108.96\">\n      <path className=\"cls-1\" d=\"M28.5 69.32A25.89 25.89 0 102.61 43.43 25.91 25.91 0 0028.5 69.32zm0-36.1a10.21 10.21 0 11-10.21 10.21A10.22 10.22 0 0128.5 33.22z\"/>\n      <path className=\"cls-1\" d=\"M144.58 17.43a25.89 25.89 0 100 51.78h7.47V53.53h-7.47a10.21 10.21 0 1110.21-10.21v22.26a6.63 6.63 0 01-6.62 6.62H4.84v15.69h143.33a22.34 22.34 0 0022.3-22.31V43.32a25.92 25.92 0 00-25.89-25.89z\"/>\n      <path className=\"cls-1\" d=\"M137.39 43.32a7.19 7.19 0 107.19-7.18 7.18 7.18 0 00-7.19 7.18z\"/>\n      <path className=\"cls-2\" d=\"M63.13 67.44A7.18 7.18 0 1056 60.26a7.18 7.18 0 007.13 7.18zm0-13.36A6.18 6.18 0 1157 60.26a6.18 6.18 0 016.13-6.18z\"/>\n      <path className=\"cls-1\" d=\"M191.15 43.32a7.18 7.18 0 107.18-7.18 7.17 7.17 0 00-7.18 7.18zM28.49 50.5a7.18 7.18 0 10-7.19-7.18 7.18 7.18 0 007.19 7.18zM109 34a7.18 7.18 0 10-7.19-7.18A7.18 7.18 0 00109 34zM88.24 45.43a10.22 10.22 0 0110.21-10.21V19.54a25.91 25.91 0 00-25.89 25.89v23.78h15.68zM242.45 61.46v-23h9.77V22.78h-9.77V2.61h-15.69v58.85a25.93 25.93 0 0025.9 25.9V71.67a10.22 10.22 0 01-10.21-10.21z\"/>\n      <path className=\"cls-1\" d=\"M188.25 43.14a10.21 10.21 0 0120.42 0v14.45l15.69 13.61V42.26a25.88 25.88 0 00-36.08-22.9V2.61h-15.71v66.6h15.68zM100.95 35.62h15.68v33.59h-15.68zM56.5 35.71h13.67V50.5H56.5z\"/>\n      <path className=\"cls-2\" fill=\"url(#linear-gradient)\" d=\"M172.48 73.07h26.21V53.51l30.57 26.42-30.57 26.42V86.79h-26.21V73.07zM59.98 59.79h6.35v1h-6.35z\"/>\n      <path className=\"cls-2\" fill=\"url(#linear-gradient)\" d=\"M62.98 64.67l-.71-.7 3.68-3.68-3.68-3.68.71-.71 4.38 4.39-4.38 4.38z\"/>\n    </svg>\n  );\n}\n\nexport default Logo;\n","import { useEffect } from 'react';\n\nexport enum Direction {\n  'DOWN',\n  'UP',\n  'LEFT',\n  'RIGHT'\n}\n\nexport interface keySet {\n  direction: Direction,\n  keys: string[]\n}\n\nconst directions: keySet[] = [\n  {\n    direction: Direction.DOWN,\n    keys: ['c','v','b','n','j','h','g']\n  },\n  {\n    direction: Direction.UP,\n    keys: ['e','r','t','y','u','d','f']\n  },\n  {\n    direction: Direction.LEFT,\n    keys: ['q','w','a','s','z','x']\n  },\n  {\n    direction: Direction.RIGHT,\n    keys: ['i','o','p','k','l','m']\n  }\n];\n\nexport default function useKeyPress(action: any) {\n  useEffect(() => {\n    function onKeyup(event: KeyboardEvent) {\n      const directionObj = checkDirection(event.key);\n      if (directionObj) {\n        action(event.key, directionObj.direction);\n      }\n    }\n    window.addEventListener('keyup', onKeyup);\n    return () => window.removeEventListener('keyup', onKeyup);\n  });\n}\n\nfunction checkDirection(key:string): keySet | undefined {\n  return directions.find((group) => {\n    const containsKey = group.keys.some((letter) => letter === key);\n    return containsKey ? group : null;\n  });\n}","import { SquareState } from '../Page/Page';\nimport { WIDTH } from '../shared/constants';\nimport './Grid.scss';\n\nconst Grid = (props: any) => {\n  const gridData: SquareState[][] = props.gridData\n\n  const squares: JSX.Element[] = [];\n  for(let row = 0; row < WIDTH; row++) {\n    const rowContainer: JSX.Element[] = [];\n    for(let column = 0; column < WIDTH; column++) {\n      rowContainer.push(\n        <>{renderSquare(row, column)}</>\n      );\n    }\n    squares.push(\n      <div className=\"row\">{rowContainer}</div>\n    );\n  };\n\n  function renderSquare(row: number, col: number) {\n    const status = gridData[row][col];\n    return (\n      <div className={\n        (status.isCurrentSquare ? 'current ' : '') +\n        (status.goalSquare ? 'goal ' : '') +\n        'square'\n      }>\n        {status.letter.toUpperCase()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"grid\">\n      <div className=\"wrapper\">\n        {squares}\n      </div>\n    </div>\n  );\n}\n\nexport default Grid;\n","export const WIDTH = 5;\n","import './Modal.scss';\n\nconst Modal = (props: {\n  isPlayingStatus: boolean,\n  winStatus: boolean,\n  currentWord: string,\n  restart: any\n}) => {\n  return (\n    <div className={(props.isPlayingStatus ? 'hidden ' : '') + 'modal'}>\n      <div className=\"box\">\n        <div className=\"text\">\n          <h2>{props.winStatus ? 'Well done' : 'Unlucky'}</h2>\n          <p>\n            {props.currentWord.toUpperCase()}\n            {props.winStatus ? ' is a valid word' : ' is not a valid word'}\n          </p>\n        </div>\n        <button onClick={props.restart}>RESTART</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Modal;\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Grid from '../Grid/Grid';\nimport useKeyPress, { Direction } from '../hooks/useKeypress';\nimport Modal from '../Modal/Modal';\nimport { WIDTH } from '../shared/constants';\nimport './Page.scss';\n\nexport interface Coords {\n  row: number;\n  col: number;\n}\n\nexport interface SquareState {\n  isCurrentSquare: boolean;\n  goalSquare: boolean;\n  letter: string;\n  coords: Coords;\n}\n\nconst blankGrid = (start: Coords, goal: Coords): SquareState[][] => {\n  const grid: SquareState[][] = [];\n  for (let row = 0; row < WIDTH; row++) {\n    const rowArray: SquareState[] = [];\n    for (let col = 0; col < WIDTH; col++) {\n      const square: SquareState = {\n        isCurrentSquare: (start.row === row && start.col === col),\n        goalSquare: (goal.row === row && goal.col === col),\n        letter: '',\n        coords: {row, col}\n      };\n      rowArray.push(square);\n    }\n    grid.push(rowArray);\n  }\n  return grid;\n}\n\nconst Page = () => {\n  const [currentWord, setCurrentWord] = useState('');\n  const [isCurrentWordValid, setIsCurrentWordValid] = useState(false);\n  const [grid, setGrid] = useState(blankGrid({row:3, col:0}, {row:1, col:4}));\n  const [isCheckingStatus, setIsCheckingStatus] = useState(false);\n  const [isPlayingStatus, setIsPlayingStatus] = useState(true);\n  const [winStatus, setWinStatus] = useState(false);\n\n  useKeyPress((key: string, direction: Direction)=> {\n    makeMove(key, direction);\n  });\n\n  useEffect(() => {\n    setIsCheckingStatus(true);\n    const fetchData = async () => {\n      if (currentWord.length > 2) {\n        const result = await axios(\n          `https://api.datamuse.com/words?sp=${currentWord}&md=d&max=1`,\n        );\n  \n        setIsCurrentWordValid(\n          result.data[0] && result.data[0]['defs'] &&\n          result.data[0]['defs'].length > 0 || false\n        );\n      } else {\n        setIsCurrentWordValid(false);\n      }\n    };\n    fetchData().then(() => {\n      setIsCheckingStatus(false);\n    });\n  }, [currentWord]);\n\n  useEffect(() => {\n    if (isCheckingStatus === false && getCurrentSquare().goalSquare) {\n      console.log(`Goal reached. WIN?`, isCurrentWordValid);\n      setWinStatus(isCurrentWordValid);\n      setIsPlayingStatus(false);\n    }\n  }, [isCheckingStatus]);\n\n  const makeMove = (key: string, direction: Direction) => {\n    const newGrid = grid;\n    const currentSquare = getCurrentSquare();\n    \n    let newSquare: SquareState; \n    switch (direction) {\n      case Direction.UP:\n        if (currentSquare?.coords.row === 0) return;\n        newSquare = grid[currentSquare!.coords.row - 1][currentSquare!.coords.col];\n        break;\n      case Direction.DOWN:\n        if (currentSquare?.coords.row === WIDTH - 1) return;\n        newSquare = grid[currentSquare!.coords.row + 1][currentSquare!.coords.col];\n        break;\n      case Direction.LEFT:\n        if (currentSquare?.coords.col === 0) return;\n        newSquare = grid[currentSquare!.coords.row][currentSquare!.coords.col - 1];\n        break;\n      case Direction.RIGHT:\n        if (currentSquare?.coords.col === WIDTH - 1) return;\n        newSquare = grid[currentSquare!.coords.row][currentSquare!.coords.col + 1];\n        break;\n    }\n\n    if (newSquare.letter) return;\n\n    // Set newSquare in newGrid & wipe old one\n    newSquare.isCurrentSquare = true;\n    newGrid[newSquare.coords.row][newSquare.coords.col] = newSquare;\n\n    const previousSquare = newGrid[currentSquare!.coords.row][currentSquare!.coords.col];\n    previousSquare.isCurrentSquare = false;\n    previousSquare.letter = key;\n\n    setCurrentWord(currentWord + key)\n    setGrid(newGrid);\n  }\n\n  const restart = () => {\n    setCurrentWord('');\n    setGrid(blankGrid({row:3, col:0}, {row:1, col:4}));\n    setIsPlayingStatus(true);\n    setWinStatus(false);\n  }\n\n  const getCurrentSquare = (): SquareState => {\n    const currentRow = grid.find(row => row.some(square => square.isCurrentSquare === true))!;\n    return currentRow.find(square => square.isCurrentSquare)!;\n  };\n\n  return (\n    <>\n      <section>\n        <Grid gridData={grid} />\n        <div className=\"text-box\">\n          <h3>{currentWord.toUpperCase()}</h3>\n        </div>\n      </section>\n\n      <Modal \n        isPlayingStatus={isPlayingStatus}\n        winStatus={winStatus}\n        currentWord={currentWord}\n        restart={restart}\n      />\n\n      <div className=\"side-bar\">\n        <button className=\"square-btn\" onClick={restart}>\n          R\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default Page;\n","import './App.scss';\nimport Logo from './Logo/Logo';\nimport Page from './Page/Page';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <Logo />\n      </header>\n      <main>\n        <Page />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}